"use client";

import { useState, useRef, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import {
  Play,
  Pause,
  Volume2,
  VolumeX,
  Maximize,
  Star,
  Heart,
  ShoppingCart,
  Info,
  ChevronLeft,
  ChevronRight,
  Sparkles,
} from "lucide-react";
import { Button } from "./button";
import { Badge } from "./badge";
import { OptimizedImage } from "./optimized-image";
import { useLazyLoading } from "@/lib/hooks/use-lazy-loading";

interface Product {
  id: string;
  name: string;
  arabicName: string;
  price: number;
  originalPrice?: number;
  images: string[];
  video?: string;
  rating: number;
  reviews: number;
  isNew?: boolean;
  isOnSale?: boolean;
  salePercentage?: number;
}

interface InteractiveProductShowcaseProps {
  products: Product[];
  autoplay?: boolean;
  showControls?: boolean;
  className?: string;
}

export function InteractiveProductShowcase({
  products,
  autoplay = false,
  showControls = true,
  className = "",
}: InteractiveProductShowcaseProps) {
  const [currentProductIndex, setCurrentProductIndex] = useState(0);
  const [isPlaying, setIsPlaying] = useState(autoplay);
  const [isMuted, setIsMuted] = useState(true);
  const [showProductInfo, setShowProductInfo] = useState(false);\n  const [hoveredProduct, setHoveredProduct] = useState<string | null>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const { elementRef, isVisible } = useLazyLoading<HTMLDivElement>({\n    threshold: 0.3,\n    rootMargin: \"100px\",\n  });\n\n  const currentProduct = products[currentProductIndex];\n\n  useEffect(() => {\n    if (isVisible && isPlaying && videoRef.current) {\n      videoRef.current.play();\n    }\n  }, [isVisible, isPlaying]);\n\n  useEffect(() => {\n    if (!autoplay) return;\n\n    const interval = setInterval(() => {\n      setCurrentProductIndex((prev) => (prev + 1) % products.length);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [autoplay, products.length]);\n\n  const handlePlayPause = () => {\n    if (videoRef.current) {\n      if (isPlaying) {\n        videoRef.current.pause();\n      } else {\n        videoRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const handleMuteToggle = () => {\n    if (videoRef.current) {\n      videoRef.current.muted = !isMuted;\n      setIsMuted(!isMuted);\n    }\n  };\n\n  const nextProduct = () => {\n    setCurrentProductIndex((prev) => (prev + 1) % products.length);\n  };\n\n  const prevProduct = () => {\n    setCurrentProductIndex((prev) => (prev - 1 + products.length) % products.length);\n  };\n\n  const selectProduct = (index: number) => {\n    setCurrentProductIndex(index);\n  };\n\n  if (!products.length) return null;\n\n  return (\n    <div\n      ref={elementRef}\n      className={`relative w-full max-w-6xl mx-auto overflow-hidden rounded-3xl glass shadow-2xl ${className}`}\n    >\n      {/* Main showcase area */}\n      <div className=\"relative aspect-video bg-gradient-to-br from-brand-50 to-secondary-50\">\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={currentProductIndex}\n            initial={{ opacity: 0, scale: 1.1 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.9 }}\n            transition={{ duration: 0.8, ease: \"easeOut\" }}\n            className=\"absolute inset-0\"\n          >\n            {currentProduct.video ? (\n              <video\n                ref={videoRef}\n                src={currentProduct.video}\n                className=\"w-full h-full object-cover\"\n                muted={isMuted}\n                loop\n                playsInline\n                onLoadStart={() => setIsPlaying(autoplay)}\n              />\n            ) : (\n              <OptimizedImage\n                src={currentProduct.images[0]}\n                alt={currentProduct.arabicName}\n                fill\n                className=\"object-cover\"\n                animationType=\"fade\"\n                animationDuration={0.8}\n                priority={currentProductIndex === 0}\n              />\n            )}\n          </motion.div>\n        </AnimatePresence>\n\n        {/* Overlay gradient */}\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\" />\n\n        {/* Badges */}\n        <div className=\"absolute top-6 right-6 flex flex-col gap-2\">\n          {currentProduct.isNew && (\n            <motion.div\n              initial={{ scale: 0, rotate: -45 }}\n              animate={{ scale: 1, rotate: 0 }}\n              transition={{ delay: 0.3, type: \"spring\" }}\n            >\n              <Badge className=\"bg-green-500 text-white px-3 py-2 shadow-lg\">\n                <Sparkles className=\"w-4 h-4 ml-1\" />\n                جديد\n              </Badge>\n            </motion.div>\n          )}\n          {currentProduct.isOnSale && currentProduct.salePercentage && (\n            <motion.div\n              initial={{ scale: 0, rotate: 45 }}\n              animate={{ scale: 1, rotate: 0 }}\n              transition={{ delay: 0.4, type: \"spring\" }}\n            >\n              <Badge className=\"bg-red-500 text-white px-3 py-2 shadow-lg\">\n                خصم {currentProduct.salePercentage}%\n              </Badge>\n            </motion.div>\n          )}\n        </div>\n\n        {/* Navigation arrows */}\n        <div className=\"absolute inset-y-0 left-4 flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={prevProduct}\n            className=\"w-12 h-12 glass-strong rounded-full flex items-center justify-center text-white hover:bg-white/20 transition-colors\"\n          >\n            <ChevronRight className=\"w-6 h-6\" />\n          </motion.button>\n        </div>\n        <div className=\"absolute inset-y-0 right-4 flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={nextProduct}\n            className=\"w-12 h-12 glass-strong rounded-full flex items-center justify-center text-white hover:bg-white/20 transition-colors\"\n          >\n            <ChevronLeft className=\"w-6 h-6\" />\n          </motion.button>\n        </div>\n\n        {/* Video/Media controls */}\n        {showControls && currentProduct.video && (\n          <div className=\"absolute bottom-6 left-6 flex items-center gap-3\">\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={handlePlayPause}\n              className=\"w-12 h-12 glass-strong rounded-full flex items-center justify-center text-white hover:bg-white/20 transition-colors\"\n            >\n              {isPlaying ? (\n                <Pause className=\"w-6 h-6\" />\n              ) : (\n                <Play className=\"w-6 h-6 mr-1\" />\n              )}\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={handleMuteToggle}\n              className=\"w-12 h-12 glass-strong rounded-full flex items-center justify-center text-white hover:bg-white/20 transition-colors\"\n            >\n              {isMuted ? (\n                <VolumeX className=\"w-6 h-6\" />\n              ) : (\n                <Volume2 className=\"w-6 h-6\" />\n              )}\n            </motion.button>\n          </div>\n        )}\n\n        {/* Product info toggle */}\n        <div className=\"absolute bottom-6 right-6\">\n          <motion.button\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={() => setShowProductInfo(!showProductInfo)}\n            className=\"w-12 h-12 glass-strong rounded-full flex items-center justify-center text-white hover:bg-white/20 transition-colors\"\n          >\n            <Info className=\"w-6 h-6\" />\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Product info panel */}\n      <AnimatePresence>\n        {showProductInfo && (\n          <motion.div\n            initial={{ opacity: 0, y: 100 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 100 }}\n            transition={{ type: \"spring\", damping: 25, stiffness: 200 }}\n            className=\"absolute bottom-0 left-0 right-0 glass-strong backdrop-blur-xl p-6 border-t border-white/10\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex-1\">\n                <h3 className=\"text-2xl font-bold text-white mb-2\">\n                  {currentProduct.arabicName}\n                </h3>\n                <div className=\"flex items-center gap-4 mb-4\">\n                  <div className=\"flex items-center gap-1\">\n                    {[...Array(5)].map((_, i) => (\n                      <Star\n                        key={i}\n                        className={`w-4 h-4 ${\n                          i < Math.floor(currentProduct.rating)\n                            ? \"text-yellow-400 fill-current\"\n                            : \"text-gray-400\"\n                        }`}\n                      />\n                    ))}\n                    <span className=\"text-white/80 text-sm mr-2\">\n                      ({currentProduct.reviews})\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-3\">\n                    <span className=\"text-2xl font-bold text-white\">\n                      {currentProduct.price.toLocaleString()} ج.م\n                    </span>\n                    {currentProduct.originalPrice && (\n                      <span className=\"text-lg text-white/60 line-through\">\n                        {currentProduct.originalPrice.toLocaleString()} ج.م\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center gap-3\">\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"w-12 h-12 glass-strong text-white hover:bg-white/20 rounded-full p-0\"\n                  >\n                    <Heart className=\"w-6 h-6\" />\n                  </Button>\n                </motion.div>\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                  <Button\n                    size=\"lg\"\n                    className=\"bg-gradient-primary hover:shadow-xl text-white px-8 py-3 rounded-2xl transition-all duration-300\"\n                  >\n                    <ShoppingCart className=\"w-5 h-5 ml-2\" />\n                    أضف للسلة\n                  </Button>\n                </motion.div>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Product thumbnails */}\n      <div className=\"p-6 bg-white/90 backdrop-blur-sm\">\n        <div className=\"flex items-center gap-4 overflow-x-auto pb-2\">\n          {products.map((product, index) => (\n            <motion.button\n              key={product.id}\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ delay: index * 0.1 }}\n              whileHover={{ scale: 1.05 }}\n              onClick={() => selectProduct(index)}\n              onMouseEnter={() => setHoveredProduct(product.id)}\n              onMouseLeave={() => setHoveredProduct(null)}\n              className={`relative flex-shrink-0 w-20 h-20 rounded-2xl overflow-hidden transition-all duration-300 ${\n                index === currentProductIndex\n                  ? \"ring-4 ring-brand-500 shadow-lg\"\n                  : \"hover:ring-2 hover:ring-brand-300\"\n              }`}\n            >\n              <OptimizedImage\n                src={product.images[0]}\n                alt={product.arabicName}\n                fill\n                className=\"object-cover\"\n                animationType=\"fade\"\n                animationDuration={0.3}\n              />\n              \n              {/* Hover overlay */}\n              <AnimatePresence>\n                {hoveredProduct === product.id && (\n                  <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"absolute inset-0 bg-black/50 flex items-center justify-center\"\n                  >\n                    <span className=\"text-white text-xs font-medium text-center px-1\">\n                      {product.arabicName}\n                    </span>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n              \n              {/* Active indicator */}\n              {index === currentProductIndex && (\n                <motion.div\n                  layoutId=\"activeProduct\"\n                  className=\"absolute inset-0 border-4 border-brand-500 rounded-2xl\"\n                  transition={{ type: \"spring\", damping: 30, stiffness: 200 }}\n                />\n              )}\n            </motion.button>\n          ))}\n        </div>\n      </div>\n\n      {/* Progress indicators */}\n      <div className=\"absolute bottom-3 left-1/2 transform -translate-x-1/2 flex gap-2\">\n        {products.map((_, index) => (\n          <motion.button\n            key={index}\n            onClick={() => selectProduct(index)}\n            className={`w-2 h-2 rounded-full transition-all duration-300 ${\n              index === currentProductIndex\n                ? \"bg-white scale-125\"\n                : \"bg-white/50 hover:bg-white/75\"\n            }`}\n            whileHover={{ scale: 1.2 }}\n            whileTap={{ scale: 0.9 }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n